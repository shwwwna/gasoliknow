import Head from "next/head";
import { useState, useEffect } from "react";
import {
	Flex,
	HStack,
	IconButton,
	Input,
	InputGroup,
	InputLeftAddon,
	InputRightAddon,
	Link,
	Stack,
	Text,
} from "@chakra-ui/react";
import {
	FormControl,
	FormLabel,
} from "@chakra-ui/react";
import {
	Stat,
	StatLabel,
	StatNumber,
	StatHelpText,
} from "@chakra-ui/react";
import { Box } from "@chakra-ui/react";
import {
	Accordion,
	AccordionItem,
	AccordionButton,
	AccordionPanel,
	AccordionIcon,
} from "@chakra-ui/react";
import {
	Table,
	Thead,
	Tbody,
	Tr,
	Th,
	Td,
	TableContainer,
} from "@chakra-ui/react";
import { Tabs, TabList, TabPanels, Tab, TabPanel } from "@chakra-ui/react";
import { Button, ButtonGroup,  } from "@chakra-ui/react";
import { ExternalLinkIcon, SearchIcon  } from "@chakra-ui/icons";
import { useDisclosure } from "@chakra-ui/react";



export default function Home() {
	// Initialize values
	const [data, setData] = useState({
		distance: 0,
		efficiency: 10,
		distanceHighway: 0,
		efficiencyHighway: 15,
		price: 69,
	});
	// Deconstruct?
	// const {distance, fuelEfficiency, fuelSpent, fuelPrice} = data

	// Save the values into `data` when changed
	const handleChange = (e) =>
		setData(prevState => ({ ...prevState, [e.target.name]: e.target.value }))
	
	const [carpool, setCarpool] = useState(2)
	const handleChangeCarpool = (e) =>
		setCarpool(e.target.value);

	const [car, setCar] = useState('');
	const handleChangeCar = (e) => setCar(e.target.value);

	
	const [destination, setDestination] = useState({
		first: '',
		second: '',
	});
	const handleChangeDestination = (e) =>
		setDestination((prevState) => ({ ...prevState, [e.target.name]: e.target.value }));

	// Initialize result
	const [result, setResult] = useState(0)
	
	// When `data` changes, set `result`
	useEffect(() => {
		let rawResult =
			(data.distance / data.efficiency +
				data.distanceHighway / data.efficiencyHighway) *
			data.price;
		setResult(rawResult.toFixed(2));
	}, [data]);

	// const handleEfficiencyHighway = (e) => {
	// 	if (e.target.checked) {
	// 		let calculatedEfficiencyHighway = 1.5 * data.efficiency
	// 		setData((prevState) => ({
	// 				...prevState,
	// 				[efficiencyHighway]: calculatedEfficiencyHighway,
	// 		}));
	// 		} else {
	// 			setData((prevState) => ({
	// 				...prevState,
	// 				[efficiencyHighway]: e.target.value,
	// 			}));
	// 		}
	// }

	// console.log(data)

	const { getDisclosureProps, getButtonProps } = useDisclosure();

	const buttonProps = getButtonProps();
	const disclosureProps = getDisclosureProps();
	

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<HStack>
				<Box w="50%" p={8}>
					<Stack spacing={3}>
						<FormControl id="distance">
							<FormLabel>Distance</FormLabel>
							<InputGroup>
								<Input type="num" name="distance" onChange={handleChange} />
								<InputRightAddon children="km" />
							</InputGroup>
						</FormControl>
						<FormControl id="efficiency">
							<FormLabel>Fuel efficiency</FormLabel>
							<InputGroup>
								<Input
									type="num"
									name="efficiency"
									onChange={handleChange}
									value={data.efficiency}
								/>
								<InputRightAddon children="km/L" />
							</InputGroup>
						</FormControl>
					</Stack>
				</Box>
				<Box>
					<Button {...buttonProps}>Passed through highway?</Button>
					<Stack {...disclosureProps} mt={4} spacing={3}>
						<FormControl id="distanceHighway">
							<FormLabel>Distance on highway</FormLabel>
							<InputGroup>
								<Input type="num" name="distanceHighway" onChange={handleChange} />
								<InputRightAddon children="km" />
							</InputGroup>
						</FormControl>
						<FormControl id="efficiencyHighway">
							<FormLabel>Fuel efficiency on highway</FormLabel>
							<InputGroup>
								<Input
									type="num"
									name="efficiencyHighway"
									onChange={handleChange}
									value={data.efficiencyHighway}
								/>
								<InputRightAddon children="km/L" />
							</InputGroup>
						</FormControl>
					</Stack>

					{/* <Accordion defaultIndex={[0]} allowMultiple>
						<AccordionItem>
							<h2>
								<AccordionButton _expanded={{ bg: "tomato", color: "white" }}>
									<Box as="span" flex="1" textAlign="left">
										Passed through highway?
									</Box>
									<AccordionIcon />
								</AccordionButton>
							</h2>
							<AccordionPanel>
								<Stack spacing={3}>
									<FormControl id="distanceHighway">
										<FormLabel>Distance on highway</FormLabel>
										<InputGroup>
											<Input type="num" name="distanceHighway" onChange={handleChange} />
											<InputRightAddon children="km" />
										</InputGroup>
									</FormControl>
									<FormControl id="efficiencyHighway">
										<FormLabel>Fuel efficiency on highway</FormLabel>
										<InputGroup>
											<Input
												type="num"
												name="efficiencyHighway"
												onChange={handleChange}
												value={data.efficiencyHighway}
											/>
											<InputRightAddon children="km/L" />
										</InputGroup>
									</FormControl>
								</Stack>
							</AccordionPanel>
						</AccordionItem>
					</Accordion> */}
				</Box>
			</HStack>

			<Box p={8}>
				<FormControl id="fuelPrice">
					<FormLabel>Fuel price</FormLabel>
					<InputGroup>
						<InputLeftAddon children="₱" />
						<Input
							type="num"
							name="fuelPrice"
							onChange={handleChange}
							value={data.price}
						/>
					</InputGroup>
				</FormControl>

				<Stat>
					<StatLabel>Your trip costs</StatLabel>
					<StatNumber fontSize="6xl">₱{result}</StatNumber>
					<StatHelpText>one trip</StatHelpText>
				</Stat>

				<TableContainer>
					<Table size="sm">
						<Thead>
							<Tr>
								<Th isNumeric>COST</Th>
								<Th></Th>
							</Tr>
						</Thead>
						<Tbody>
							<Tr>
								<Td isNumeric>₱{(result * 2).toFixed(2)}</Td>
								<Td>round trip</Td>
							</Tr>
							<Tr>
								<Td isNumeric>₱{(result * 2 * 22).toFixed(2)}</Td>
								<Td>monthly (round trip x 22)</Td>
							</Tr>
							<Tr>
								<Td isNumeric>₱{(result * 2 * 260).toFixed(2)}</Td>
								<Td>yearly (round trip x 260)</Td>
							</Tr>
							<Tr>
								<Td isNumeric>₱{(result / carpool).toFixed(2)}</Td>
								<Td>
									one trip per person<br></br>
									<Flex gap={2}>
										for a carpool of{" "}
										<Input
											size="xs"
											maxW={16}
											name="carpool"
											onChange={handleChangeCarpool}
											value={carpool}
										/>
									</Flex>
								</Td>
							</Tr>
						</Tbody>
					</Table>
				</TableContainer>
			</Box>
			<Box w="50%" p={8}>
				<h2>Don't know all data?</h2>
				<Tabs variant="line" colorScheme="red">
					<TabList>
						<Tab>Distance</Tab>
						<Tab>Fuel efficiency</Tab>
						<Tab>Fuel price</Tab>
					</TabList>
					<TabPanels>
						{/* -------------------------------------------------------------------------- */
						/*                                  DISTANCE                                  */
						/* -------------------------------------------------------------------------- */}
						<TabPanel>
							<HStack>
								<Input
									type="num"
									name="first"
									onChange={handleChangeDestination}
									value={destination.first}
								/>
								<Input
									type="num"
									name="second"
									onChange={handleChangeDestination}
									value={destination.second}
								/>
								<Link
									href={"https://www.google.com/maps/dir/" + destination.first + "/" + destination.second}
									isExternal>
									<IconButton aria-label="Search database" icon={<SearchIcon />} />
								</Link>
							</HStack>
							<Stack>
								<Link
									href="https://www.google.com/maps/dir/Makati,+Metro+Manila/BGC,+Taguig,+Metro+Manila/@14.5478113,121.0193523,14z/data=!4m14!4m13!1m5!1m1!1s0x3397c90264a0ed01:0x2b066ed57830cace!2m2!1d121.0244452!2d14.554729!1m5!1m1!1s0x3397c8f3fa2994af:0x89c988af4760e40a!2m2!1d121.0503183!2d14.5408671!3e0"
									isExternal>
									<Button>
										Go to Google maps <ExternalLinkIcon mx="2px" />
									</Button>
								</Link>

								<Link
									href="https://www.openstreetmap.org/directions?engine=fossgis_osrm_car&route=14.5568%2C121.0211%3B14.5551%2C121.0481#map=15/14.5540/121.0351"
									isExternal>
									<Button variant="outline">
										Go to OpenStreetMap <ExternalLinkIcon mx="2px" />
									</Button>
								</Link>
							</Stack>
						</TabPanel>
						{/* -------------------------------------------------------------------------- */
						/*                                  FUEL EFFICIENCY                                  */
						/* -------------------------------------------------------------------------- */}
						<TabPanel>
							<HStack>
								<Input type="num" name="car" onChange={handleChangeCar} value={car} />
								<Link
									href={"https://www.google.com/search?q=" + car + "+fuel+efficiency"}
									isExternal>
									<IconButton aria-label="Search database" icon={<SearchIcon />} />
								</Link>
							</HStack>
						</TabPanel>
						{/* -------------------------------------------------------------------------- */
						/*                                  FUEL PRICE                                  */
						/* -------------------------------------------------------------------------- */}
						<TabPanel>
							<Stack>
								<Link
									href="https://www.doe.gov.ph/price-monitoring-charts?q=retail-pump-prices-metro-manila"
									isExternal>
									<Button>
										Go to Department of Energy <ExternalLinkIcon mx="2px" />
									</Button>
								</Link>

								<Link
									href="https://www.globalpetrolprices.com/Philippines/gasoline_prices/"
									isExternal>
									<Button variant="outline">
										Go to GlobalPetrolPrices <ExternalLinkIcon mx="2px" />
									</Button>
								</Link>
								<Link href="https://www.numbeo.com/gas-prices/in/Manila" isExternal>
									<Button variant="outline">
										Go to Numbeo <ExternalLinkIcon mx="2px" />
									</Button>
								</Link>
							</Stack>
						</TabPanel>
					</TabPanels>
				</Tabs>
			</Box>
		</>
	);
}
